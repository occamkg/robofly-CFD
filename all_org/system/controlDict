/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  plus                                  |
|   \\  /    A nd           | Web:      www.OpenFOAM.com                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    location    "system";
    object      controlDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

libs            ("liboverset.so");

application     pimpleDyMFoam;

startFrom       startTime;

startTime       0;

stopAt          endTime;


endTime         3;
deltaT          0.005;
writeControl    runTime;
writeInterval   5;

// //for kinematics
// endTime         1.5;
// deltaT          0.1;
// writeControl    runTime;
// writeInterval   0.1;


purgeWrite      0;

writeFormat     ascii;

writePrecision  6;

writeCompression off;

timeFormat      general;

timePrecision   6;

// runTimeModifiable true;

// adjustTimeStep  true;
// maxCo           4;
// maxDeltaT       0.01;

// ************************************************************************* //



functions
{

// ///////////////////////////////////////////////////////////////////////////
//     inMassFlow
//     {
//         type            surfaceFieldValue;

//         libs ("libfieldFunctionObjects.so");
//         enabled         true;

//         writeControl   timeStep;
//         writeInterval  100;

//         log             false;

//         writeFields     false;

//         regionType          patch;
//         name      inlet;

// 	    operation       sum;
//         fields
//         (
//             phi
//         );
//     }
// ///////////////////////////////////////////////////////////////////////////

// ///////////////////////////////////////////////////////////////////////////
//     outMassFlow
//     {
//         type            surfaceFieldValue;

//         libs ("libfieldFunctionObjects.so");
//         enabled         true;

// 		writeControl   runTime;
// 		writeInterval  0.1;

//         log             no;

//         writeFields     false;

//         regionType          patch;
//         name      outlet;

// 		operation       sum;
//         fields
//         (
//             phi
//         );
//     }
// ///////////////////////////////////////////////////////////////////////////

// ///////////////////////////////////////////////////////////////////////////

//     fieldAverage
//     {
//         type            fieldAverage;
//         libs ("libfieldFunctionObjects.so");
//         enabled        false;
//         writeControl   outputTime;

// 		//writeControl   timeStep;
// 		//writeInterval  100;

// 		//cleanRestart true;

// 		//timeStart       20;
// 		//timeEnd         200;

//         fields
//         (
//             U
//             {
//                 mean        on;
//                 prime2Mean  on;
//                 base        time;
//             }

//             p
//             {
//                 mean        on;
//                 prime2Mean  on;
//                 base        time;
//             }
//         );
//     }

// ///////////////////////////////////////////////////////////////////////////

///////////////////////////////////////////////////////////////////////////

    forces_object
    {
        type forces;
        libs ("libforces.so");

        //writeControl outputTime;
		writeControl   runTime;
        writeInterval  0.01;
        log            false;


        //// Patches to sample
        patches ("wing");

        //// Name of fields
        pName p;
        Uname U;

        //// Density
        rho rhoInf;
        rhoInf 880;

        //// Center of rotation
        CofR (0 0 0);
    }

///////////////////////////////////////////////////////////////////////////

// ///////////////////////////////////////////////////////////////////////////

//     forceCoeffs_object
//     {
//         // rhoInf - reference density
//         // CofR - Centre of rotation
//         // dragDir - Direction of drag coefficient
//         // liftDir - Direction of lift coefficient
//         // pitchAxis - Pitching moment axis
//         // magUinf - free stream velocity magnitude
//         // lRef - reference length
//         // Aref - reference area
//         type forceCoeffs;
//         libs ("libforces.so");
//         //patches ("body1" "body2" "body3");
//         patches ("wing");

//         pName p;
//         Uname U;
//         rho rhoInf;
//         rhoInf 880;

//         //// Dump to file
//         log true;

//         CofR (0.0 0 0);
//         liftDir (1 0 0);
//         dragDir (1 0 0);
//         pitchAxis (0 0 1);
//         magUInf 0;
//         lRef 1.0;         // reference lenght for moments!!!
//         Aref 1.0;	//2.0;         // reference area 1 for 2d

//         writeControl   timeStep;
//         writeInterval  1;
//     }

// ///////////////////////////////////////////////////////////////////////////

// ///////////////////////////////////////////////////////////////////////////

//     minmaxdomain
//     {
//         type fieldMinMax;
//         //type banana;

//         libs ("libfieldFunctionObjects.so");

//         enabled true;

//         mode component;

// 		writeControl   runTime;
// 		writeInterval  0.1;

//         log false;

//         fields (p U k epsilon omega nut);
//     }

// ///////////////////////////////////////////////////////////////////////////

// ///////////////////////////////////////////////////////////////////////////
//     yplus
//     {
//     	type yPlus;
//     	libs ("libfieldFunctionObjects.so");
//     	enabled true;

//         writeControl writeTime;
//         writeInterval 1;
//         log false;
//     }
// ///////////////////////////////////////////////////////////////////////////

};

