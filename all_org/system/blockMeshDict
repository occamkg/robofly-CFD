/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  v2212                                 |
|   \\  /    A nd           | Website:  www.openfoam.com                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    object      blockMeshDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

scale   1;

outt    0.4;
outr    1;
// int     0.2;
// inr     0.4;

vertices
(
    ( $outr  $outr -$outt)  //0
    (-$outr  $outr -$outt)  //1
    (-$outr -$outr -$outt)  //2
    ( $outr -$outr -$outt)  //3
    ( $outr  $outr  $outt)  //4
    (-$outr  $outr  $outt)  //5
    (-$outr -$outr  $outt)  //6
    ( $outr -$outr  $outt)  //7

    // ( $inr  $inr -$int)     //8
    // (-$inr  $inr -$int)     //9
    // (-$inr -$inr -$int)     //10
    // ( $inr -$inr -$int)     //11
    // ( $inr  $inr  $int)     //12
    // (-$inr  $inr  $int)     //13
    // (-$inr -$inr  $int)     //14
    // ( $inr -$inr  $int)     //15
);

blocks
(
    // hex (0 1 2 3 8 9 10 11)
    // (40 40 10)
    // simpleGrading (1 1 0.2)

    // hex (7 6 5 4 15 14 13 12)
    // (40 40 10)
    // simpleGrading (1 1 0.2)

    // hex (1 0 4 5 9 8 12 13)
    // (40 20 10)
    // simpleGrading (1 1 0.2)

    // hex (3 2 6 7 11 10 14 15)
    // (40 20 10)
    // simpleGrading (1 1 0.2)

    // hex (2 1 5 6 10 9 13 14)
    // (40 20 10)
    // simpleGrading (1 1 0.2)

    // hex (0 3 7 4 8 11 15 12)
    // (40 20 10)
    // simpleGrading (1 1 0.2)

    // hex (8 9 10 11 12 13 14 15)
    // (40 40 20)
    // simpleGrading (1 1 1)
    hex (0 1 2 3 4 5 6 7)
    (100 100 40)
    simpleGrading (1 1 1)
);

edges
(
);

boundary
(
    oversetPatch
    {
        type overset;
        faces ();
    }
    sides
    {
        type patch;
        faces
        (
            (0 1 2 3)
            (7 6 5 4)
            (1 0 4 5)
            (3 2 6 7)
            (2 1 5 6)
            (0 3 7 4)
        );
    }
);

mergePatchPairs
(
);


// ************************************************************************* //
